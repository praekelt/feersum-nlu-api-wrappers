# coding: utf-8

"""
    FeersumNLU API

    This is the HTTP API for Feersum NLU. See https://github.com/praekelt/feersum-nlu-api-wrappers for examples of how to use the API.  # noqa: E501

    OpenAPI spec version: 2.0.54.dev2
    Contact: nlu@feersum.io
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


from __future__ import absolute_import

import unittest

import feersum_nlu
from feersum_nlu.api.data_objects_api import DataObjectsApi  # noqa: E501
from feersum_nlu.rest import ApiException


class TestDataObjectsApi(unittest.TestCase):
    """DataObjectsApi unit test stubs"""

    def setUp(self):
        self.api = feersum_nlu.api.data_objects_api.DataObjectsApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_data_object_del(self):
        """Test case for data_object_del

        Trash a data_object.  # noqa: E501
        """
        pass

    def test_data_object_del_all(self):
        """Test case for data_object_del_all

        Delete all data_objects. Returns list of names of data_objects deleted. Note that this is a convenience operation. The objects will still need to be vaporised one by one.  # noqa: E501
        """
        pass

    def test_data_object_get_details(self):
        """Test case for data_object_get_details

        Get a data_object.  # noqa: E501
        """
        pass

    def test_data_object_get_names_all(self):
        """Test case for data_object_get_names_all

        Get list of names of data_objects.  # noqa: E501
        """
        pass

    def test_data_object_post(self):
        """Test case for data_object_post

        Update/create a data_object.  # noqa: E501
        """
        pass

    def test_data_object_untrash(self):
        """Test case for data_object_untrash

        Untrash the named data_object.  # noqa: E501
        """
        pass

    def test_data_object_vaporise(self):
        """Test case for data_object_vaporise

        Vaporise the named data_object.  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
